{"ast":null,"code":"import { increment, decrement, reset } from '../counter.actions';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ngrx/store\";\nimport * as i2 from \"@angular/common\";\nexport class MyCounterComponent {\n  constructor(store) {\n    this.store = store;\n    this.count$ = store.select('count');\n  }\n  increment() {\n    this.store.dispatch(increment());\n  }\n  decrement() {\n    this.store.dispatch(decrement());\n  }\n  reset() {\n    this.store.dispatch(reset());\n  }\n  static #_ = this.ɵfac = function MyCounterComponent_Factory(t) {\n    return new (t || MyCounterComponent)(i0.ɵɵdirectiveInject(i1.Store));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: MyCounterComponent,\n    selectors: [[\"app-my-counter\"]],\n    decls: 9,\n    vars: 3,\n    consts: [[\"id\", \"increment\", 3, \"click\"], [\"id\", \"decrement\", 3, \"click\"], [\"id\", \"reset\", 3, \"click\"]],\n    template: function MyCounterComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"button\", 0);\n        i0.ɵɵlistener(\"click\", function MyCounterComponent_Template_button_click_0_listener() {\n          return ctx.increment();\n        });\n        i0.ɵɵtext(1, \"Increment\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"div\");\n        i0.ɵɵtext(3);\n        i0.ɵɵpipe(4, \"async\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"button\", 1);\n        i0.ɵɵlistener(\"click\", function MyCounterComponent_Template_button_click_5_listener() {\n          return ctx.decrement();\n        });\n        i0.ɵɵtext(6, \"Decrement\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"button\", 2);\n        i0.ɵɵlistener(\"click\", function MyCounterComponent_Template_button_click_7_listener() {\n          return ctx.reset();\n        });\n        i0.ɵɵtext(8, \"Reset Counter\");\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate1(\"Current Count: \", i0.ɵɵpipeBind1(4, 1, ctx.count$), \"\");\n      }\n    },\n    dependencies: [i2.AsyncPipe],\n    encapsulation: 2\n  });\n}","map":{"version":3,"names":["increment","decrement","reset","MyCounterComponent","constructor","store","count$","select","dispatch","_","i0","ɵɵdirectiveInject","i1","Store","_2","selectors","decls","vars","consts","template","MyCounterComponent_Template","rf","ctx","ɵɵelementStart","ɵɵlistener","MyCounterComponent_Template_button_click_0_listener","ɵɵtext","ɵɵelementEnd","MyCounterComponent_Template_button_click_5_listener","MyCounterComponent_Template_button_click_7_listener","ɵɵadvance","ɵɵtextInterpolate1","ɵɵpipeBind1"],"sources":["/home/mhurtado/workspace/courses/ngrx-tutorial/src/app/my-counter/my-counter.component.ts","/home/mhurtado/workspace/courses/ngrx-tutorial/src/app/my-counter/my-counter.component.html"],"sourcesContent":["import { Component } from '@angular/core';\r\nimport { Store } from '@ngrx/store';\r\nimport { Observable } from 'rxjs';\r\nimport { increment, decrement, reset } from '../counter.actions';\r\n\r\n@Component({\r\n  selector: 'app-my-counter',\r\n  templateUrl: './my-counter.component.html',\r\n})\r\nexport class MyCounterComponent {\r\n  count$: Observable<number>;\r\n\r\n  constructor(private store: Store<{ count: number }>) {\r\n    this.count$ = store.select('count');\r\n  }\r\n\r\n  increment() {\r\n    this.store.dispatch(increment());\r\n  }\r\n\r\n  decrement() {\r\n    this.store.dispatch(decrement());\r\n  }\r\n\r\n  reset() {\r\n    this.store.dispatch(reset());\r\n  }\r\n}\r\n\r\n\r\n/*\r\nUse of this source code is governed by an MIT-style license that\r\ncan be found in the LICENSE file at https://github.com/ngrx/platform\r\n*/","<button id=\"increment\" (click)=\"increment()\">Increment</button>\r\n\r\n<div>Current Count: {{ count$ | async }}</div>\r\n\r\n<button id=\"decrement\" (click)=\"decrement()\">Decrement</button>\r\n\r\n<button id=\"reset\" (click)=\"reset()\">Reset Counter</button>\r\n\r\n\r\n<!-- \r\nUse of this source code is governed by an MIT-style license that\r\ncan be found in the LICENSE file at https://github.com/ngrx/platform\r\n-->"],"mappings":"AAGA,SAASA,SAAS,EAAEC,SAAS,EAAEC,KAAK,QAAQ,oBAAoB;;;;AAMhE,OAAM,MAAOC,kBAAkB;EAG7BC,YAAoBC,KAA+B;IAA/B,KAAAA,KAAK,GAALA,KAAK;IACvB,IAAI,CAACC,MAAM,GAAGD,KAAK,CAACE,MAAM,CAAC,OAAO,CAAC;EACrC;EAEAP,SAASA,CAAA;IACP,IAAI,CAACK,KAAK,CAACG,QAAQ,CAACR,SAAS,EAAE,CAAC;EAClC;EAEAC,SAASA,CAAA;IACP,IAAI,CAACI,KAAK,CAACG,QAAQ,CAACP,SAAS,EAAE,CAAC;EAClC;EAEAC,KAAKA,CAAA;IACH,IAAI,CAACG,KAAK,CAACG,QAAQ,CAACN,KAAK,EAAE,CAAC;EAC9B;EAAC,QAAAO,CAAA,G;qBAjBUN,kBAAkB,EAAAO,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,KAAA;EAAA;EAAA,QAAAC,EAAA,G;UAAlBX,kBAAkB;IAAAY,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,4BAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCT/BX,EAAA,CAAAa,cAAA,gBAA6C;QAAtBb,EAAA,CAAAc,UAAA,mBAAAC,oDAAA;UAAA,OAASH,GAAA,CAAAtB,SAAA,EAAW;QAAA,EAAC;QAACU,EAAA,CAAAgB,MAAA,gBAAS;QAAAhB,EAAA,CAAAiB,YAAA,EAAS;QAE/DjB,EAAA,CAAAa,cAAA,UAAK;QAAAb,EAAA,CAAAgB,MAAA,GAAmC;;QAAAhB,EAAA,CAAAiB,YAAA,EAAM;QAE9CjB,EAAA,CAAAa,cAAA,gBAA6C;QAAtBb,EAAA,CAAAc,UAAA,mBAAAI,oDAAA;UAAA,OAASN,GAAA,CAAArB,SAAA,EAAW;QAAA,EAAC;QAACS,EAAA,CAAAgB,MAAA,gBAAS;QAAAhB,EAAA,CAAAiB,YAAA,EAAS;QAE/DjB,EAAA,CAAAa,cAAA,gBAAqC;QAAlBb,EAAA,CAAAc,UAAA,mBAAAK,oDAAA;UAAA,OAASP,GAAA,CAAApB,KAAA,EAAO;QAAA,EAAC;QAACQ,EAAA,CAAAgB,MAAA,oBAAa;QAAAhB,EAAA,CAAAiB,YAAA,EAAS;;;QAJtDjB,EAAA,CAAAoB,SAAA,GAAmC;QAAnCpB,EAAA,CAAAqB,kBAAA,oBAAArB,EAAA,CAAAsB,WAAA,OAAAV,GAAA,CAAAhB,MAAA,MAAmC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}